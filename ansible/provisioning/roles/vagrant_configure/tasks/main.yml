---
- name: Vagrant networking; resolve.conf option(check if this works with hadoop)
  lineinfile:
    dest: /etc/resolv.conf
    state: present
    line: "options single-request-reopen"
- name: Copy in custom motd file
  copy:
   src: "../files/motd.txt"
   dest: /etc/motd
   mode: 0644
- name: Set 'menu' alias in global bashrc
  lineinfile:
   dest: /etc/bashrc
   line: "{{ item }}"
  with_items:
   - '# The line below aliases the menu command to show the motd.'
   - "alias menu='cat /etc/motd'"
   - "alias ap='ansible-playbook'"
- name: add hosts
  shell: |     
     echo '{{item.ip}} {{item.fqdn}} {{item.server}}' >> /etc/hosts
  with_items: 
    - { ip: "192.168.99.11", server: "hdnode1", fqdn: "hdnode1.adtest07.org" }
    - { ip: "192.168.99.12", server: "hdnode2", fqdn: "hdnode2.adtest07.org" }
    - { ip: "192.168.99.13", server: "hdnode3", fqdn: "hdnode3.adtest07.org" }
    - { ip: "192.168.99.14", server: "db", fqdn: "db.adtest07.org" }             
    - { ip: "192.168.99.10", server: "dc1", fqdn: "dc1.adtest07.org" }   

- name: disable firewalld
  firewalld:
    permanent: yes
    state: disabled

- name: install EPEL release package for RHEL
  yum:
    name: epel-release
    state: latest
  when: ansible_distribution == 'CentOS'
- name: install EPEL release package for RHEL
  yum:
    name: "https://dl.fedoraproject.org/pub/epel/epel-release-present-{{ ansible_distribution_major_version }}.noarch.rpm"
    state: latest
  when: ansible_distribution == 'Red Hat Enterprise Linux'

- name: Disable SELinux
  shell: /usr/bin/sed -i 's/=enforcing/=disabled/g' /etc/selinux/config


- name: yum repo
  shell: curl -o  /etc/yum.repos.d/centos.repo https://raw.githubusercontent.com/tso-ansible/ansible-tower/master/centos.repo    

- name: prepare git2
  shell: |
       yum -y install https://donotdeletetfstate.blob.core.windows.net/binary/endpoint-repo-1.7-1.x86_64.rpm

- name: Install git, vim, vind-utils, and etc with yum
  yum: 
    name: 
      - git
      - vim
      - bind-utils
      - zlib-devel
      - sqlite-devel
      - bzip2-devel
      - graphviz-devel
      - openssl-devel
      - libffi-devel
      - libjpeg-turbo-devel
      - giflib
      - tmux
      - libmemcached-devel
      - wget
      - unzip
      - sshpass
    state: present

- name: sshkeygen
  shell: su - vagrant -c 'ssh-keygen -q -f ~/.ssh/id_rsa -N ""'

- name: StrictHostKeyChecking
  shell: |
        su - vagrant -c 'echo "Host *" > ~/.ssh/config;echo "   StrictHostKeyChecking no" >> ~/.ssh/config;echo "   UserKnownHostsFile=/dev/null" >> ~/.ssh/config;chmod 0400 ~/.ssh/config;'   

- name: PasswordAuthentication
  lineinfile:
    dest:  /etc/ssh/sshd_config
    regexp: '^PasswordAuthentication no'
    line: "PasswordAuthentication yes"

- name: remove first line 
  shell: sed -i '1d' /etc/hosts
